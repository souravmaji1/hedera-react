{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "airdropId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum AirdropSystem.TokenType",
						"name": "tokenType",
						"type": "uint8"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tokenId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalTokens",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					}
				],
				"name": "AirdropCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "airdropId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "pausedBy",
						"type": "address"
					}
				],
				"name": "AirdropPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "airdropId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "resumedBy",
						"type": "address"
					}
				],
				"name": "AirdropResumed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "airdropId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					}
				],
				"name": "NftClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "airdropId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokensClaimed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "_users",
						"type": "address[]"
					}
				],
				"name": "addToWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "airdropCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "canClaim",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "claimTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_tokenId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_expirationTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_totalTokens",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "enum AirdropSystem.ConditionType",
								"name": "conditionType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "conditionTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "conditionMinBalance",
								"type": "uint256"
							}
						],
						"internalType": "struct AirdropSystem.Condition[]",
						"name": "_conditions",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "_firstClaimPercentage",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_secondClaimPercentage",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_otherClaimPercentage",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					}
				],
				"name": "createERC20Airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_nftIds",
						"type": "uint256[]"
					},
					{
						"internalType": "string",
						"name": "_tokenId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_expirationTime",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "enum AirdropSystem.ConditionType",
								"name": "conditionType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "conditionTokenAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "conditionMinBalance",
								"type": "uint256"
							}
						],
						"internalType": "struct AirdropSystem.Condition[]",
						"name": "_conditions",
						"type": "tuple[]"
					},
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					}
				],
				"name": "createERC721Airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "deactivateAirdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getAirdropDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum AirdropSystem.TokenType",
								"name": "tokenType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "expirationTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalTokens",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "claimedTokens",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isActive",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isPaused",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "claimableAmount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "enum AirdropSystem.ConditionType",
										"name": "conditionType",
										"type": "uint8"
									},
									{
										"internalType": "address",
										"name": "conditionTokenAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "conditionMinBalance",
										"type": "uint256"
									}
								],
								"internalType": "struct AirdropSystem.Condition[]",
								"name": "conditions",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "firstClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "secondClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "otherClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isWhitelisted",
								"type": "bool"
							},
							{
								"internalType": "uint256[]",
								"name": "availableNftIds",
								"type": "uint256[]"
							}
						],
						"internalType": "struct AirdropSystem.AirdropDetails",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_creator",
						"type": "address"
					}
				],
				"name": "getAirdropsByCreator",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum AirdropSystem.TokenType",
								"name": "tokenType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "expirationTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalTokens",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "claimedTokens",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isActive",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isPaused",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "claimableAmount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "enum AirdropSystem.ConditionType",
										"name": "conditionType",
										"type": "uint8"
									},
									{
										"internalType": "address",
										"name": "conditionTokenAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "conditionMinBalance",
										"type": "uint256"
									}
								],
								"internalType": "struct AirdropSystem.Condition[]",
								"name": "conditions",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "firstClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "secondClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "otherClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isWhitelisted",
								"type": "bool"
							},
							{
								"internalType": "uint256[]",
								"name": "availableNftIds",
								"type": "uint256[]"
							}
						],
						"internalType": "struct AirdropSystem.AirdropDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllAirdropIds",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getEligibleAirdrops",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum AirdropSystem.TokenType",
								"name": "tokenType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "expirationTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalTokens",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "claimedTokens",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isActive",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isPaused",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "claimableAmount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "enum AirdropSystem.ConditionType",
										"name": "conditionType",
										"type": "uint8"
									},
									{
										"internalType": "address",
										"name": "conditionTokenAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "conditionMinBalance",
										"type": "uint256"
									}
								],
								"internalType": "struct AirdropSystem.Condition[]",
								"name": "conditions",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "firstClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "secondClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "otherClaimPercentage",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isWhitelisted",
								"type": "bool"
							},
							{
								"internalType": "uint256[]",
								"name": "availableNftIds",
								"type": "uint256[]"
							}
						],
						"internalType": "struct AirdropSystem.AirdropDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "isAirdropPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "pauseAirdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "_users",
						"type": "address[]"
					}
				],
				"name": "removeFromWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "resumeAirdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_airdropId",
						"type": "uint256"
					}
				],
				"name": "withdrawRemainingTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC-20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createERC20Airdrop(address,string,uint256,uint256,(uint8,address,uint256)[],uint256,uint256,uint256,string)": {
					"notice": "Create an ERC20 airdrop. The caller must have approved this contract for _totalTokens."
				},
				"createERC721Airdrop(address,uint256[],string,uint256,(uint8,address,uint256)[],string)": {
					"notice": "Create an ERC721 airdrop. Caller must have approved this contract to transfer the provided NFTs."
				},
				"getAirdropDetails(uint256,address)": {
					"notice": "Get airdrop details by ID (for viewing paused status and other details)"
				},
				"isAirdropPaused(uint256)": {
					"notice": "Check if an airdrop is paused"
				},
				"pauseAirdrop(uint256)": {
					"notice": "Pause an airdrop - only creator or owner can pause"
				},
				"resumeAirdrop(uint256)": {
					"notice": "Resume a paused airdrop - only creator or owner can resume"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"newone.sol": "AirdropSystem"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
				"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
				"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
			]
		},
		"newone.sol": {
			"keccak256": "0xbabda8965978aac82eedfb06812cbf9e6596d2f14d946ca5c436d03f94fc4da3",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc238ff27c8ae7f14b804075b839c6c8c7033009f4f0148b562f18a1d7ac49f4",
				"dweb:/ipfs/QmZxoQsoxsiJY25EZmZS8uq8ztiU2Zzh6qvq5STwoyu3g5"
			]
		}
	},
	"version": 1
}